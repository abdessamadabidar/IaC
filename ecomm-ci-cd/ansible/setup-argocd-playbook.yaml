---
- name: Setup ArgoCD on EKS
  hosts: localhost
  vars:
    ns: argocd
    region: "us-east-1"
    cluster_name: "ecomm-eks"
    aws_ecr_server: "314146337686.dkr.ecr.us-east-1.amazonaws.com"
  tasks:
    - name: Update Kubeconfig for EKS using aws cli
      shell: |
        aws eks update-kubeconfig \
        --region {{ region }} \
        --name {{ cluster_name }}
    
    - name: Create Docker Registry secret for AWS ECR
      shell: |
        kubectl create secret docker-registry regcred \
        --docker-server={{ aws_ecr_server }} \
        --docker-username=AWS \
        --docker-password=$(aws ecr get-login-password --region {{ region }}) \
        
    - name: Create k8s ArgoCD namespace
      kubernetes.core.k8s:
        name: {{ ns }}
        api_version: v1
        kind: Namespace
        state: present

    - name: Install ArgoCD
      kubernetes.core.k8s:
        src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        state: present
        namespace: {{ ns }}

    - name: Wait till ArgoCD server is deployed
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Deployment
        namespace: {{ ns }}
        wait: yes
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 300
        wait_sleep: 10
    
    - name: Get initial ArgoCD admin password
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Secret
        namespace: {{ ns }}
        name: argocd-initial-admin-secret
      register: admin_secret

    - name: Decode and log admin password
      debug:
        msg: "Iinitial Admin Password : {{ admin_secret.resources[0].data.password | b64decode }}"
      when: admin_secret.resources | length > 0

